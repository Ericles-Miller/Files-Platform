generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Files {
  id           String   @id @default(uuid())
  displayName  String   @unique
  displayCover String
  size         Float
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  type         String
  folderPath   String
  user         Users    @relation(fields: [userId], references: [id])
  userId       String
  folderId     String
  folder       Folder   @relation(fields: [folderId], references: [id])

  @@map("posts")
}

model Users {
  id            String          @id @default(uuid())
  name          String
  email         String
  password      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?       @default(now())
  enable        Boolean
  avatar        String?
  fileName      String?
  Files         Files[]
  RefreshTokens RefreshTokens[]

  @@map("users")
}

model Folder {
  id           String    @id @default(uuid())
  displayName  String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @default(now())
  size         Float
  dadId        String?
  prerequisite Folder?   @relation("FolderToFolder", fields: [dadId], references: [id])
  childrens    Folder[]  @relation("FolderToFolder")

  Files Files[]
}

model RefreshTokens {
  id        String @id @default(uuid())
  expiresIn Int
  user      Users  @relation(fields: [userId], references: [id])
  userId    String

  @@map("refreshTokens")
}
